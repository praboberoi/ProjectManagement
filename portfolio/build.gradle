// Bolt Development
// SENG302 Team 300

plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
}

group = 'nz.ac.canterbury.seng302'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

wrapper {
    gradleVersion = '7.4'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'net.devh:grpc-client-spring-boot-starter:2.13.1.RELEASE' // GRPC client dependencies
    implementation 'nz.ac.canterbury.seng302:shared:1.0' // Local package containing .proto files

    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'
    implementation 'com.h2database:h2:1.4.200'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'junit:junit:4.13.1'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.6.4'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'io.cucumber:cucumber-java:7.2.3'

}

application {
     // Define the main class for the application.
     mainClass = 'nz.ac.canterbury.seng302.portfolio.PortfolioApplication'
 }

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

sourceSets {
    test {
        resources.srcDirs = ['src/test/resources']
        java.srcDirs = ['src/test/java', 'src/main/java']
        runtimeClasspath = project.sourceSets.main.compileClasspath +
                project.sourceSets.test.runtimeClasspath +
                project.sourceSets.test.compileClasspath +
                fileTree("src/test/resources/test") +
                project.sourceSets.test.output + project.sourceSets.main.output
    }
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime  + sourceSets.test.output
            args = ['--plugin', 'pretty', '--glue', 'nz.ac.canterbury.seng302.portfolio.cucumber', 'src/test/resources']
        }
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    // force the test task to run Cucumber too
    finalizedBy cucumber
}