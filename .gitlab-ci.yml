workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - when: always

stages:
  - tagChecking
  - publishProtosToLocalMavenRepo
  - build
  - test
  - sonarqube
  - deploy

tag-checker:
  stage: tagChecking
  script:
    - python3 tag_checker.py $CI_COMMIT_TAG
  only:
    - tags

junit-porfolio:
  stage: test
  script:
    - cd portfolio
    - ./gradlew test
  artifacts:
    paths:
      - portfolio/build/jacoco/test-report.xml

junit-identityprovider:
  stage: test
  script:
    - cd identityprovider
    - ./gradlew test
  artifacts:
    paths:
      - identityprovider/build/jacoco/test-report.xml

sonarqube2-identityprovider:
  stage: sonarqube
  variables:
    GIT_DEPTH: 0
  script:     
    - cd identityprovider
    - ./gradlew sonarqube -P SONARQUBE=${SONARQUBE}
  allow_failure: true
  only:
    - merge_requests
    - tags
    - master
    - develop

sonarqube1-portfolio:
  stage: sonarqube
  variables:
    GIT_DEPTH: 0
  script:     
    - cd portfolio
    - ./gradlew sonarqube -P SONARQUBE=${SONARQUBE}
  allow_failure: true
  only:
    - merge_requests
    - tags
    - master
    - develop

publish-protos-to-maven-local:
  stage: publishProtosToLocalMavenRepo
  script:
    - cd shared
    - ./gradlew clean
    - ./gradlew publishToMavenLocal

# builds all branches, except dev and master
branch-build:
  stage: build
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - cd ../portfolio
    - ./gradlew bootJar
  artifacts:
    paths:
      - identityprovider/build/libs
      - portfolio/build/libs
  except:
    - tags
    - master
    - develop

deploy-staging-identityprovider:
  stage: deploy
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/staging-identityprovider/ || true
    - mkdir /home/gitlab-runner/staging-identityprovider/
    - cp -r ./build/libs /home/gitlab-runner/staging-identityprovider
    - cp ../runner/staging-identityprovider.sh /home/gitlab-runner/staging-identityprovider.sh
    - chmod u+x /home/gitlab-runner/staging-identityprovider.sh
    - (echo "export MARIADB_USERNAME=${MARIADB_USERNAME}" & echo "export MARIADB_PASSWORD=${MARIADB_PASSWORD}") > /home/gitlab-runner/staging-identityprovider/env.sh
    - sudo systemctl restart staging-identityprovider
  artifacts:
    paths:
      - identityprovider/build/libs
  only:
    - develop

deploy-staging-portfolio:
  stage: deploy
  script:
    - cd portfolio
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/staging-portfolio/ || true
    - mkdir /home/gitlab-runner/staging-portfolio/
    - cp -r ./build/libs /home/gitlab-runner/staging-portfolio
    - cp ../runner/staging-portfolio.sh /home/gitlab-runner/staging-portfolio.sh
    - chmod u+x /home/gitlab-runner/staging-portfolio.sh
    - (echo "export MARIADB_USERNAME=${MARIADB_USERNAME}" & echo "export MARIADB_PASSWORD=${MARIADB_PASSWORD}") > /home/gitlab-runner/staging-portfolio/env.sh
    - sudo systemctl restart staging-portfolio
  artifacts:
    paths:
      - portfolio/build/libs
  only:
    - develop

deploy-production-identityprovider:
  stage: deploy
  script:
    - cd identityprovider
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/production-identityprovider/ || true
    - mkdir /home/gitlab-runner/production-identityprovider/
    - cp -r ./build/libs /home/gitlab-runner/production-identityprovider
    - cp ../runner/production-identityprovider.sh /home/gitlab-runner/production-identityprovider.sh

    - chmod u+x /home/gitlab-runner/production-identityprovider.sh
    - (echo "export MARIADB_USERNAME=${MARIADB_USERNAME}" & echo "export MARIADB_PASSWORD=${MARIADB_PASSWORD}") > /home/gitlab-runner/production-identityprovider/env.sh

    - sudo systemctl restart production-identityprovider
  artifacts:
    paths:
      - identityprovider/build/libs
  only:
    - tags

deploy-production-portfolio:
  stage: deploy
  script:
    - cd portfolio
    - ./gradlew bootJar
    - rm -rf /home/gitlab-runner/production-portfolio/ || true
    - mkdir /home/gitlab-runner/production-portfolio/
    - cp -r ./build/libs /home/gitlab-runner/production-portfolio
    - cp ../runner/production-portfolio.sh /home/gitlab-runner/production-portfolio.sh
    - chmod u+x /home/gitlab-runner/production-portfolio.sh
    - (echo "export MARIADB_USERNAME=${MARIADB_USERNAME}" & echo "export MARIADB_PASSWORD=${MARIADB_PASSWORD}") > /home/gitlab-runner/production-portfolio/env.sh
    - sudo systemctl restart production-portfolio
  artifacts:
    paths:
      - portfolio/build/libs
  only:
    - tags
